let swingPat = "<t f> f f <[f!3 t]>"
    swingPat' = "<t f> t f <[f!3 t]>"
    pats =
      [
        ("a1", stack [
         struct "t*16"
          $ n "[af'sus4,f] [af'sus2,df]"
          # s "superhoover"
          # octave "<4 5 4 3 4>"
          # legato 1
          |+ n "<0 5 0 -7>"
          # gain 1
          # lpf (range 500 15000 $ slow 16 sine)
        , superimpose (0.25 ~>) . (# coarse 3) . (off 1.25 (id))
          $ struct (swingPat)
          $ s "linnhats"
          # gain 1.111
          ]
          ),
        ("a2", stack [
          someCyclesBy 0.66 ((# detune 0.66) . (# legato 1.5))
          $ someCyclesBy 0.44 (slow 1.5 . sometimes (jux (+ n "<6 5> <5 6> <0 -1>") . (# accelerate "<-0.2 0.1> <0.1 -0.2> <0 0.2>") . (# octave (choose [4,5,6]) )))
          $ n (arp "converge up" "<[af'sus2'8@3 af'sus4'8@1.5] [af'six'12|df'maj9'12]>")
          # s "supertron"
          # octave "3 2 3 3"
          # legato 1
          |+ n "<0 5 0 -7>"
          # gain 0.84
        , struct "t*16"
          $ n "af'sus4 af'sus2"
          # s "superhoover"
          # octave "<4 5 4 3 4>"
          # legato 1
          |+ n "<0 5 0 -7>"
          # gain 1
          # lpf (range 500 15000 $ slow 16 sine)
        , struct (swingPat)
          $ s "808sd:11"
          # gain 1.25
        , slow 2
          $ struct (inv swingPat)
          $ s "clubkick"
        , repeatCycles 4
          $ struct "<t*8 t*12>"
          $ s "linnhats"
        , repeatCycles 2
          $ cat [n "df f@5", n "df fs'five@5"]
          # s "superchip"
          # legato 1
          # octave 3
          # gain 1.25
          ]
          ),
        ("b", stack [
          struct (swingPat)
          $ n "af'sus4 af'sus2"
          # s "superzow"
          # octave "<4 5 3 4>"
          # legato 1
          |+ n "<0 5 0 -7>"
          # gain 0.88
        , struct (swingPat)
          $ s "clubkick"
          # gain 1.2
        , (1 ~>) $ every 4 (# gain 1)
          $ struct (inv swingPat)
          $ s "clubkick"
          # gain 0
        , degradeBy 0.22
          $ struct "t*16"
          $ s "linnhats"
          # coarse "4 1 5 3 4 2 4 3 5"
        , struct (swingPat)
          $ cat [n "df", n "fs", n "af"]
          # s "superchip"
          # legato 1
          # octave 2
          # gain 1.25
        ]
        ),
        ("c1", stack [
          off 1.25 (fast "2 1 2")
          $ n (arp "pinkydown [down ~ up]" "<f'7sus4'8 f'min7'12@1.5 af'sus4'6@2.5>")
          # s "superfm"
          # ratio1 "<1.11 2.11 3.11>"
          # octave "4 5 3"
          # voice "2 1 2 4"
          # egrate11 "2 4 3"
        , slow 2
          $ struct "t*6 t*3"
          $ n "af'maj"
          # s "superpwm"
          # gain "0.77"
        , struct (swingPat')
          $ n "bf"
          # s "superchip"
          # legato 1
          # octave "2 3"
          # gain 1.25
        , struct "<t*24 t*8>"
          $ s "linnhats cp"
          # squiz "5 10 1 1 4 8 10"
        , s "clubkick"
        ]
        ),
        ("c2", stack [
          off 1.25 (fast "2 1 2")
          $ n (arp "pinkyup [up ~ down]" "<f'7sus4'16 f'min7'24@1.5 af'sus4'12@2.5>")
          # s "superfm"
          # ratio1 "<1.11 2.11 3.11>"
          # octave "4 5 3"
          # voice "2 3 2 4"
          # egrate11 "2 4 3"
        , slow 2
          $ struct "t*6 t*3"
          $ n "df'sus2 af'maj fs'sus2 df'maj9"
          # s "superpwm supersquare"
          # gain "0.77 0.66"
        , struct (swingPat')
          $ cat [n "bf", n "af", n "df", n "fs"]
          # s "superchip"
          # legato 1
          # octave 2
          # gain 1.25
        , struct "<t*24 t*8> <t*12 t*16> <t*4 t*36>"
          $ s "linnhats"
          # gain 0.88
        , s "clubkick"
        , someCyclesBy 0.33 (stutWith 16 (1/36) (|* gain 0.97))
          $ struct "t(2,8,<1 3>)"
          $ s "cp"
        ]
        )
      ]
in
d1 $ ur 80 "a1 a2 b c1 c2" pats [] # cps (115/240)

-- superfm modifiers
let -- modulators
    mod11 = pF "mod11"
    mod12 = pF "mod12"
    mod13 = pF "mod13"
    mod14 = pF "mod14"
    mod15 = pF "mod15"
    mod16 = pF "mod16"
    mod21 = pF "mod21"
    mod22 = pF "mod22"
    mod23 = pF "mod23"
    mod24 = pF "mod24"
    mod25 = pF "mod25"
    mod26 = pF "mod26"
    mod31 = pF "mod31"
    mod32 = pF "mod32"
    mod33 = pF "mod33"
    mod34 = pF "mod34"
    mod35 = pF "mod35"
    mod36 = pF "mod36"
    mod41 = pF "mod41"
    mod42 = pF "mod42"
    mod43 = pF "mod43"
    mod44 = pF "mod44"
    mod45 = pF "mod45"
    mod46 = pF "mod46"
    mod51 = pF "mod51"
    mod52 = pF "mod52"
    mod53 = pF "mod53"
    mod54 = pF "mod54"
    mod55 = pF "mod55"
    mod56 = pF "mod56"
    mod61 = pF "mod61"
    mod62 = pF "mod62"
    mod63 = pF "mod63"
    mod64 = pF "mod64"
    mod65 = pF "mod65"
    mod66 = pF "mod66"
    -- operator envelope generator levels
    eglevel11 = pF "eglevel11"
    eglevel12 = pF "eglevel12"
    eglevel13 = pF "eglevel13"
    eglevel14 = pF "eglevel14"
    eglevel21 = pF "eglevel21"
    eglevel22 = pF "eglevel22"
    eglevel23 = pF "eglevel23"
    eglevel24 = pF "eglevel24"
    eglevel31 = pF "eglevel31"
    eglevel32 = pF "eglevel32"
    eglevel33 = pF "eglevel33"
    eglevel34 = pF "eglevel34"
    eglevel41 = pF "eglevel41"
    eglevel42 = pF "eglevel42"
    eglevel43 = pF "eglevel43"
    eglevel44 = pF "eglevel44"
    eglevel51 = pF "eglevel51"
    eglevel52 = pF "eglevel52"
    eglevel53 = pF "eglevel53"
    eglevel54 = pF "eglevel54"
    eglevel61 = pF "eglevel61"
    eglevel62 = pF "eglevel62"
    eglevel63 = pF "eglevel63"
    eglevel64 = pF "eglevel64" 
    -- operator envelope generator rates
    egrate11 = pF "egrate11"
    egrate12 = pF "egrate12"
    egrate13 = pF "egrate13"
    egrate14 = pF "egrate14"
    egrate21 = pF "egrate21"
    egrate22 = pF "egrate22"
    egrate23 = pF "egrate23"
    egrate24 = pF "egrate24"
    egrate31 = pF "egrate31"
    egrate32 = pF "egrate32"
    egrate33 = pF "egrate33"
    egrate34 = pF "egrate34"
    egrate41 = pF "egrate41"
    egrate42 = pF "egrate42"
    egrate43 = pF "egrate43"
    egrate44 = pF "egrate44"
    egrate51 = pF "egrate51"
    egrate52 = pF "egrate52"
    egrate53 = pF "egrate53"
    egrate54 = pF "egrate54"
    egrate61 = pF "egrate61"
    egrate62 = pF "egrate62"
    egrate63 = pF "egrate63"
    egrate64 = pF "egrate64"
    -- operator output levels
    amp1 = pF "amp1"
    amp2 = pF "amp2"
    amp3 = pF "amp3"
    amp4 = pF "amp4"
    amp5 = pF "amp5"
    amp6 = pF "amp6"
    -- operator frequency ratios
    ratio1 = pF "ratio1"
    ratio2 = pF "ratio2"
    ratio3 = pF "ratio3"
    ratio4 = pF "ratio4"
    ratio5 = pF "ratio5"
    ratio6 = pF "ratio6"
    -- operator frequency detuners
    detune1 = pF "detune1"
    detune2 = pF "detune2"
    detune3 = pF "detune3"
    detune4 = pF "detune4"
    detune5 = pF "detune5"
    detune6 = pF "detune6"
    -- other
    feedback = pF "feedback"
    lfofreq = pF "lfofreq"
    lfodepth = pF "lfodepth"
