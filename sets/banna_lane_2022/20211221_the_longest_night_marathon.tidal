-- longest night set
-- https://night.tidalcycles.org
-- https://github.com/cleary/livecode/sets/

-- include
-- - https://raw.githubusercontent.com/cleary/livecode/main/weekly/20210526.tidal
d1
    $ whenmod 64 48 (|+ up "<5!4 4!4 2!4 1!4>"  )
    $ sometimesBy 0.05 (slow 2 . (stutWith 3 0.2 (|- note "-5")))
    $ whenmod 32 30 (iter' 4 . jux rev . density "[1.5]")
    $ whenmod 41 39 (iter' 2 . jux rev . density "[0.7]")
    $ (struct "t*2 t*3 t*4 t*3"
    $ note (arp "down" "<c'min11'20 ~ ~ df'min13'19 ~ ~ ~ ~ ~ ~>")
    # s "superpiano")
    -- # clouds 0.9 0.7 0.67 0.7
    -- # cloudsblend 0.7 0.7 0.9 0.7
    # nudge (range "-0.025" 0.075 ((slow 3 sine) + cosine))
    # sustain 5
    # lpf 2000
    # octave 4
    # cps "<0.32!4 0.45>"
    # delay 1
    # dfb 0.5
    # dt 1
    -- # cps 0.32
    # pan 0.8
    # verb 0.8 0.6 0.1 0.1

xfadeIn 2 4 $ silence

mute 1

-- bass
let gate = "<t(<11 9>,16,<0 3>)>"
    abgate = (smooth $ stitch (inv gate) 0.5 0)
in
d2 
    -- $ fast 2
    $ whenmod 8 0 (struct "<[t [~ t] t ] [~ t [~ t] t]>")
    $ whenmod 64 48 ((|+ n "<5!4 4!4 2!4 1!4>") )
    -- $ someCyclesBy 0.7 (struct "t" . (# hcutoffbus 3 (rangex 0 4000 (saw))))
    $ whenmod 32 30 (iter' 4 . jux rev . density "<0.2 [1@0.125 0.2@0.875]>" . (# cut 1) . (arp "up") )
    $ somecyclesBy 0.3 (degradeBy 0.8)
    $ every 7 (iter' 4 . jux rev . density "2" . (# cut 1) . (arp "down up"))
    $ every "<9 17>" ((# ampbus 1 abgate) )
    $ struct "<[t ~ [~ t] t ] < [~ t [~ t] t]!3 ~>  >"
    $ note (arp "<converge down disconverge down up >" "<c4'min'8!3 df4'min'8!2>")
    # s "pluckng"
    -- # lpf 800
    # verb 0.6 0.7 0.1 0.1
    # pan 0.3
    # cut 1
    # gain 1.2

-- rhythm 1
d3 
    $ whenmod 32 30 (# silence)
    $ stack [
        {- kick -} almostNever (ply 2) $ struct "<[t ~ [~ t] t ] [~ t [~ t] t]>" $ s "[dr_few?, bd, 808bd:1/8]"  # cutoff 400 # speed 0.8 # gain 0.98
        {- ride -}, stutWith 8 0.25 ((* gain 0.8) . (# begin 0.1))
        $ almostNever (# accelerate "-0.5")
        $ struct "<~ ~ t ~ ~>"
        $ s "cr:5"
        # hcutoff 4000
        # speed "[-0.3 | -0.3 | -1.3 | 0.3]"
        # rings 0.8 0.8 0.6 0.8 0.5
        {- snare -}, someCyclesBy 0.12 (plyWith 2 (0.25 <~)) $ someCyclesBy 0.1 (ghost . (# pan (rand) )) $ (struct "~ t" $ s "sd") |< n (irand 3) # end "0.1" # hcutoff 2000
        , sometimesBy 0.15 (ply 1.5) $ s "[~ cr:1?]" # gain 0.7
    ]
    # verb 0.7 0.7 0.3 0.3

-- rhythm snap
d4
    $ struct "~ t" 
    $ s "snap"

-- rhythm break
d4 
    $ whenmod 32 30 (# silence)
    $ loopAt 4 $ slice 32 (run 32) $ s "[breph | breph:1]"

-- vox
d5 
    $ whenmod 64 48 (|+ up "<5!4 4!4 2!4 1!4>"  )
    -- $ sometimesBy 0.2 (off 0.5 ((|+ up 12) . (|+ n 5) . (# accBy 4)) )
    $ sometimesBy 0.55 ( (|+ up 14) . (# ampbus 6 (stitch (binaryN 16 43690) "0" "0.5")))
    $ n (scale "minor" "< ~ ~ ~ ~ ~ <11?0.4 ~> ~ <12 ~> ~ ~ ~ >")
    # s "lidvox"
    # verb 0.9 0.9 0.1 0.1
    # clouds 0.7 0.6 0.6 0.7
    # cloudsblend 0.9 0.9 0.4 0.3
    # ampbus 1 (smooth $ "0 0.5 0.3!3")
    # gain 0.8
    # hcutoff 5000
    # cut 1
    # panbus 5 (range "-1" 1 (slow 3 sine))

-- hush on transition
do
d2 silence
d3 silence
d4 silence
d5 silence

-- include
-- - https://github.com/cleary/livecode/blob/main/weekly/20210921.tidal
-- midi0: Vital/Growl Bass Sidechain

let bass =  "[4 0 0 0 3 0 0 0 4 0 4 5]"
    mel1 = "0 3 [4 5] [8 7]"
    pat = "100010001011"

all $ swingBy 0.25 6 -- . (# cps 0.3) -- . (someCyclesBy 0.3 (linger "[ t | q]"))

all $ linger (range 0 1 "[s | 0.125 | 0.25 0.5]")

-- xfadeIn 1 16
d1
    -- $ whenmod 8 6 (slow 2 . off (1/6) (|+ up 12))
    $ fast (2/3)
    $ mask "<1 1 1 1 [0 1 1 1] 1 1 1 1 1 [0 1] 1 1 1>"
    $ struct "t*12"
    $ stack [
         almostNever (# legato 1.1) $
         -- whenmod 9 7 (jux (((1 + (1/3)) ~>) . (slow 2 . (# s "[jrhodes:5| jrhodes:4 | jrhodes:2]"))) . (# legato 0.5) . (# delay 1) . (# delayfb 0.9) . (# dt (1/8)) . (# cutoff 2000)) $
         s "midi0"
         # note (scale "minor" (bass
               + (floor <$> range 0 14 (slow 4 sine))
               - (floor <$> range 0 6(fast 3 cosine))
               )
             )
         # legato "<[0.2 1.1 0.2] 0.2 1 <[1.1 1 1.1 0.8] 1>>"
         # pan 0.2
    ]
    # midichan 0 |- up 12 
    # cps 0.5
    -- # cps (range 0.35 0.6 $ slow 8 sine)
    -- # cps (range 0.2 1.2 "^9")

do 
    unmute 4
    unmute 3
    unmute 1
    d4 silence  
    d3 silence 

-- off beats
let kickpat = "<[[11]00000] [1000100]>"
    kpat2 = (/= 0) <$> (bass:: Pattern Int)
in
d3
    $ rarely (ply 2)
    $ someCyclesBy 0.4 (mask kpat2 . (# verb 0 0 0 0) . (sometimes ((ply "[3 | 2 | 1]") . (# pan (rand)) . (# legato 0.5)) ) . (rarely (# speed "-0.5")) )
    $ someCyclesBy 0.1 (plyWith 2 ("t" <~))
    $ stack [
        struct kickpat $ s "[realclaps?, bd:4, clubkick, 808bd:1?]"
        , degradeBy 0.89 $ struct (inv kickpat) $ s "[sd]" |< n (irand 5) # speed 0.3
    ] # shape 0.5
    # verb 0.9 0.9 0.1 0.4
    # cutoff 2000
    # crush 3

d2
    -- $ whenmod 8 6 (slow 2 . off (1/6) (|+ up 12))
    -- $ fast (2/3)
    $ sometimesBy 0.3 (jux (rev . ((# s "jrhodes:1") ) ))
    -- $ mask "<1111001110011111>"
    $ mask "<{101}%4>"
    $ struct "t*12"
    $ stack [
         someCyclesBy 0.3 (linger "[ t | q]") $ 
         s "[[flbass | flbass:14?]]"
         -- s "[ flbass:14]"
         # note (scale "minor" (bass
               + (floor <$> range 0 14 (slow 4 sine))
               - (floor <$> range 0 6(fast 3 cosine))
               )
             ) -- # cut 1 
         # crush 2
         # legato "<[0.2 1.1 0.2] 0.2 1 1.1>"
         # verb 0.6 0.5 0.1 0.2
         # delay 0.5
         # dt "1"
         # dfb "0.6"
         # gain 1.1
         # pan 0.8
    ]
    # midichan 0 |- up 12 

mute 4

all $ someCyclesBy 0.12 ( linger "[s | 0.125 | 0.25 0.5]")

-- drive beat
let kickpat = "<[111011] [111000] [111011] [[11]0101[01]]>"
    -- kickpat = "t*4"
    kpat2 = (/= 0) <$> (bass:: Pattern Int)
in
d4
    $ someCyclesBy 0.3 (linger "[ t | q]")
    $ stack [
        someCyclesBy 0.7 (mask kpat2)
        $ sometimes (ply 2) $ struct kickpat $ "[bd:4, clubkick]"
        , s "realclaps?"
        , almostNever (slow 1.5 . rev . plyWith "[8|12|4]" (# gain 0.85)) $ rarely (fast 2) $ struct (inv kickpat) $ s "[sd, realclaps?]" # gain 1.1
        , sometimesBy 0.2 (plyWith "[2|3|6]" ((# gain 0.7) )) $ fast 2 $ struct "1[[11]0]10[11]0" $ s "[<hc>, [~ ~ ~ ~ ~ ho:1/4]?]" # hcutoff (stitch "{100100101}%10" "10000" "8000") 
        -- , s "ho(3,12,2)" # rings 0.9 0.8 0.6 0.7 0.9
    ]
    # shape 0.5
    # verb "0.8" "0.7" 0.1 0.2
    # speed 0.8




-- include:
-- - palau

d1
    $ someCyclesBy 0.8 (struct "t(<5 3 3 4>,8,<0 1?>)" ) $ slow 2 $ note "<f'maj c'min'o bf4'maj'ii f'maj'o>"
    # s "braids"
    # legato "4"
    # morph (rand + perlin)
    # cps 0.55

d2 $ loopAt 4 $ s "breakz"

-- punctual
-- record:
a << spin (time/2) $ zoom 1.6 $ tex "https://upload.wikimedia.org/wikipedia/commons/f/ff/Compact-vinyl.JPG" [fx, fy * 1.32];
b << spin (time/2) $ zoom (1.6 + (ilo/6)) $ texhsv "https://upload.wikimedia.org/wikipedia/commons/f/ff/Compact-vinyl.JPG" [fx, fy * 1.32] * (ilo);
hsvrgb $ max a b * [ifft (fx),1,0.5] * (rect 0 2) >> video;

prox lo/4

-- spectro
-- longest night #2
c << zoom (1.5 + ilo) $ texhsv "https://upload.wikimedia.org/wikipedia/commons/2/20/Scream_crosathorian.jpg" [fx*1.75, fy];
a << hline ([1.5, 1.6 .. 2.5 ]* ((ifft fx) * fy)) (0.1) * 0.6;
a * c >> video;
spin 1 $ a *c >> video;
b << hline ([1.5, 1.6 .. 2.5 ]*((ifft fx) * (1- fy))) (0.1) * [sin 0.1, 1, 0.6];
b/c >> video;
spin 1 $ b - c >> hsv;
0.95 >> fdbk;

