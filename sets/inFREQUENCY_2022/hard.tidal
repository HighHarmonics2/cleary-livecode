-- include
-- - https://github.com/cleary/livecode/blob/main/weekly/20210921.tidal
-- midi0: Vital/Growl Bass Sidechain

let bass =  "[4 0 0 0 3 0 0 0 4 0 4 5]"
    mel1 = "0 3 [4 5] [8 7]"
    pat = "100010001011"

all $ swingBy 0.0 6 -- . (# cps 0.3) -- . (someCyclesBy 0.3 (linger "[ t | q]"))

all $ linger (range 0 1 "^8")

-- xfadeIn 1 16
d1
    -- $ whenmod 8 6 (slow 2 . off (1/6) (|+ up 12))
    -- $ fast (2/3)
    -- $ whenmod 32 24 (|+ note (floor <$> range 0 14 (slow 4 sine)))
    $ struct "t*12"
    $ stack [
         almostNever (# legato 1.1) $
         -- whenmod 16 12 (jux (((1 + (1/3)) ~>) . (slow 2 . (# s "[jrhodes:5| jrhodes:4 | jrhodes:2]"))) . (# legato 0.5) . (# delay 1) . (# delayfb 0.9) . (# dt (1/8)) . (# cutoff 2000)) $
         whenmod 32 24 (|+ note (floor <$> range 0 14 (slow 4 sine))) $
         s "midi0"
         # note (scale "minor" (bass
               -- + (floor <$> range 0 14 (slow 4 sine))
               - (floor <$> range 0 6(fast 3 cosine))
               )
             )
         # legato "<[0.2 1.1 0.2] 0.2 1 <[1.1 1 1.1 0.8] 1>>"
         # pan 0.2
    ]
    # midichan 0 |- up 12 
    # cps 0.4
    -- # cps (range 0.2 1.2 "^9")

d2
    -- $ whenmod 8 6 (slow 2 . off (1/6) (|+ up 12))
    -- $ fast (2/3)
    $ struct "t*12"
    $ stack [
         someCyclesBy 0.3 (linger "[ t | q]") $ 
         s "[flbass | flbass:14?]"
         -- s "[ flbass:14]"
         # note (scale "minor" (bass
               + (floor <$> range 0 14 (slow 4 sine))
               - (floor <$> range 0 6(fast 3 cosine))
               )
             ) # cut 1 # crush 2
         # legato "<[0.2 1.1 0.2] 0.2 1 1.1>"
         # verb 0.6 0.5 0.1 0.2
         # gain 1.1
         # pan 0.8
    ]
    # midichan 0 |- up 12 

-- off beats
let kickpat = "<[[11]00000] [1000100]>"
    kpat2 = (/= 0) <$> (bass:: Pattern Int)
in
d3
    $ someCyclesBy 0.4 (mask kpat2 . (# verb 0 0 0 0) . (sometimes ((ply "[3 | 2 | 1]") . (# pan (rand)) . (# legato 0.5)) ) . (rarely (# speed "-0.5")) )
    $ someCyclesBy 0.1 (plyWith 2 ("t" <~))
    $ stack [
        struct kickpat $ s "[realclaps?, bd:4, clubkick, 808bd:1?]"
        , degradeBy 0.89 $ struct (inv kickpat) $ s "[sd]" |< n (irand 5) # speed 0.3
    ] # shape 0.5
    # verb 0.9 0.9 0.1 0.4
    # cutoff 2000
    # crush 3

-- drive beat
let kickpat = "<[111011] [111000] [111011] [[11]0101[01]]>"
    kpat2 = (/= 0) <$> (bass:: Pattern Int)
in
d4
    -- $ someCyclesBy 0.3 (linger "[ t | q]")
    $ stack [
        someCyclesBy 0.7 (mask kpat2)
        $ sometimes (ply 2) $ struct kickpat $ "[bd:4, clubkick]"
        , s "realclaps?"
        , almostNever (slow 1.5 . rev . plyWith "[8|12|4]" (# gain 0.85)) $ rarely (fast 2) $ struct (inv kickpat) $ s "[sd, realclaps?]" # gain 1.1
        , sometimesBy 0.2 (
            plyWith "[2|3|6]" ((# gain 0.7) )) 
            $ fast 2 $ struct "1[[11]0]10[11]0" 
            $ s "[<hc>, [~ ~ ~ ~ ~ ho:1/4]?]" 
            # hcutoff (stitch "{100100101}%10" "10000" "8000") 
        -- , s "ho(3,12,2)" # rings 0.9 0.8 0.6 0.7 0.9
    ]
    # shape 0.5
    # verb 0.8 0.8 0.1 0.2
    # speed 1




-- include:
-- - palau

d1
    $ someCyclesBy 0.8 (struct "t(<5 3 3 4>,8,<0 1?>)" ) $ slow 2 $ note "<f'maj c'min'o bf4'maj'ii f'maj'o>"
    # s "braids"
    # legato "4"
    # morph (rand + perlin)
    # cps 0.55

d2 $ loopAt 4 $ s "breakz"

-- punctual
-- record:
a << spin (time/2) $ zoom 1.6 $ tex "https://upload.wikimedia.org/wikipedia/commons/f/ff/Compact-vinyl.JPG" [fx, fy * 1.32];
b << spin (time/2) $ zoom (1.6 + (ilo/6)) $ texhsv "https://upload.wikimedia.org/wikipedia/commons/f/ff/Compact-vinyl.JPG" [fx, fy * 1.32] * (ilo);
hsvrgb $ max a b * [ifft (fx),1,0.5] * (rect 0 2) >> video;

prox lo/4

-- spectro
-- longest night #2
c << zoom (1.5 + ilo) $ texhsv "https://upload.wikimedia.org/wikipedia/commons/2/20/Scream_crosathorian.jpg" [fx*1.75, fy];
a << hline ([1.5, 1.6 .. 2.5 ]* ((ifft fx) * fy)) (0.1) * 0.6;
a * c >> video;
spin 1 $ a *c >> video;
b << hline ([1.5, 1.6 .. 2.5 ]*((ifft fx) * (1- fy))) (0.1) * [sin 0.1, 1, 0.6];
b/c >> video;
spin 1 $ b - c >> hsv;
0.95 >> fdbk;


d1
    -- $ whenmod 32 24 (|+ note (floor <$> range 0 14 (slow 4 sine)))
    $ note (scale "minor" "[4 0 0 0 3 0 0 0 4 0 4 5]")
    # s "superchip"


d1
    $ whenmod 32 24 (|+ note (floor <$> range 0 14 (slow 4 sine)))
    $ struct "t*12"
    $ stack [
         s "superchip"
         # note (scale "minor" ( "[4 0 0 0 3 0 0 0 4 0 4 5]"))
    ]
